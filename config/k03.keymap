#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };
    };

    macros {
        switch_lang: switch_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LC(SPACE)>;
            label = "SWITCH_LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kt LC(SPACE)  &kp LA(N1)  &kp LA(NUMBER_2)  &kp LA(N3)    &kp LA(N4)  &kp LA(N5)                                  &kp LA(N6)  &kp LA(N7)     &kp LA(N8)     &none          &none     &none
&kp TAB        &kp Q       &kp W             &kp E         &kp R       &kp T                                       &kp Y       &kp U          &kp I          &kp O          &kp P     &kp LEFT_BRACKET
&kp CAPS       &kp A       &kp S             &kp D         &kp F       &kp G                                       &kp H       &kp J          &kp K          &kp L          &kp SEMI  &kp SQT
&kp LSHFT      &kp Z       &kp X             &kp C         &kp V       &kp B       &kt LC(SPACE)    &kt LC(SPACE)  &kp N       &kp M          &kp COMMA      &kp DOT        &kp FSLH  &kp NUBS
                           &kp LEFT_ALT      &kp LEFT_GUI  &kp ESC     &mo 1       &kp SPACE        &kp ENTER      &mo 1       &kp BACKSPACE  &kp RIGHT_GUI  &kp RIGHT_ALT
            >;

            display-name = "Base";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        layer_1 {
            bindings = <
&trans     &trans         &trans        &trans         &trans         &trans                          &trans     &trans        &trans     &trans        &trans        &trans
&kp GRAVE  &kp N1         &kp N2        &kp N3         &kp N4         &kp N5                          &kp N6     &kp N7        &kp N8     &kp N9        &kp N0        &kp BSLH
&trans     &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(QMARK)  &kp LS(EXCL)                    &kp EQUAL  &kp LS(LPAR)  &kp LBKT   &kp LS(LBRC)  &kp LS(LT)    &kp MINUS
&trans     &kp LS(AT)     &kp GRAVE     &kp LS(CARET)  &kp LS(PIPE)   &kp LS(AMPS)  &trans    &trans  &kp SEMI   &kp DOT       &kp COMMA  &kp LS(DQT)   &kp LS(STAR)  &kp PLUS
                          &trans        &trans         &trans         &mo 2         &trans    &trans  &mo 2      &trans        &trans     &trans
            >;

            label = "üëæ";
        };

        layer_2 {
            bindings = <
&trans     &trans         &trans         &trans         &trans         &trans                          &trans     &trans        &trans     &trans        &trans        &trans
&kp GRAVE  &kp N1         &kp N2         &kp N3         &kp N4         &kp N5                          &kp N6     &kp N7        &kp N8     &kp N9        &kp N0        &kp BSLH
&trans     &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)  &kp LS(QMARK)  &kp LS(EXCL)                    &kp EQUAL  &kp LS(RPAR)  &kp RBKT   &kp LS(RBRC)  &kp LS(GT)    &kp MINUS
&trans     &kp LS(AT)     &kp LS(TILDE)  &kp LS(CARET)  &kp LS(PIPE)   &kp LS(AMPS)  &trans    &trans  &kp SEMI   &kp DOT       &kp COMMA  &kp LS(DQT)   &kp LS(STAR)  &kp PLUS
                          &trans         &trans         &trans         &trans        &trans    &trans  &trans     &trans        &trans     &trans
            >;

            label = "üßë‚Äçüíª";
        };
    };
};
